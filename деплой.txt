Бля
Втягивание, втягивание происходит в запись Артиклей

Что хотел рассказать
Как деплоить приложухи
В частности на питоне
В частности сервочки

Значит че
Вообще хороший видосик есть от Фаершип.айо
Там сколько - 9 способов Как задеплоить приложуху
Вот
Рассмотрим способ Который я Использую
Способы

Значит че
Самый Лучший вариант по моему мнению это когда Не нужно заморачиваться с деплоем С мониторингом сервисов и Так далее, Серверов

Это что значит - это значит паас - То есть на google Апп Энжин - Эти вот стандарт инвайромент
стандарт инвайромент - там Вроде докер - немножко надо запариться об этом позже
То что мы используем в общем
У нас наверное стандарт инвайромент а флексибл инвайромент это через докер

Короче В чем суть что у нас на работке Мы используем google Апп Енжин И деплой производится в 1 команду
То есть реально пишешь 1 ямл-файл и все и можешь деплоить - Через кли-утилиту джиклауд
Вот
это самое хороший вариант
еще альтернативы - хироку - Тоже Довольно просто деплоится там - Пару файликов буквально создаешь и все, примитивных
Вот

Что еще
еще Относительно просто, Используя Тревис Сиай и Гитхаб ПЕйджес

Ну все я уже выхожу за рамки деплоя
Будет про различные стратегии деплоя Всяких разных приложух - в общем артикль обо всем

Так вот гитхаб пейджес Тревис Сиай
Про сиай надо рассказать
Гитхаб пейджес сиай
Короче гуглишь Накст  Тревис Сиай Гитхаб пейджес - В Официальной документации прям Написано Что как
И думать не надо просто контрол ц, контрол в - Нормально получается
Что делает этот скриптик
Он Собирает наш Бложек - Ну да например блошек разберем
И все

Еще да Широка река будет

Значит накс
Он что дает он дает возможность деплоить приложухи вьюшные 3 способами
Сср - сервер сайт рендеринг
Спа -
И А Ссджи - Статик сайт дженерейшн
 Я деплою через статик Сайт дженирейшен (снж)
В чем суть
В Том что На выходе Получается статические хтмлки
Вот
Они уже как бы Конечные, Фиксированные

Другой вариант - сср
Он про то что что накст Нам генерирует сервер
Этот сервер Нам будет на входящий запрос сгенерировать Эйчитимелки
То есть питония есть такая штука (Ну не только в питоне)
Есть такая штука как эчтимель шаблонизатор - То есть это эчтимель с какими то Синтаксическими конструкциями Которая позволяет цикл писать, всякое такое
Так вот этот ссар похож на вот эти хтмл шаблонизатор
То есть приходит запрос Мы какие то там данные на сервере берем, вставляем их в хтмлку И отдаем Клиенту хтмлку
То есть классика Серверная классика
то есть джанго шаблоны Это можно сказать Север сайт рендеринг, джинджа шаблоны
Вот

Что еще
Еще есть спа
Это Мы на выходе получаем минифицированный дж-файлик
Вот
Ну и все
и типа
И Такой Пустой хтмл
В этом хтил содержится скрип тег
Вот
Который скрипт подгружает, наш весь ДжС
И он уже там Виртуальный дом делает

Собственно Зачем нам сср, ссдж, Если есть спа простой
Суть в том что, в сео оптимизации
То есть Спа
Точнее нет
Сео - это что
это когда поисковые роботы Твой сайт сканирует, Анализирует контент на нем И Соответственно в поисковой выдаче как-то Отображает, выводит
И когда у нас Анализ контента Производится, из хтмля в основном
А случае спа у  нас хтмл пустой
И Поисковый робот он Хз как с твоим хтмл быть пустым, он не понимает про что сайт
Конечно сейчас Поисковые роботы умеют Полностью вот это вот спа приложения загружать
Но рекомендуется все-таки для сео генерить Полноценный эчтимель, уже отрендеренный
Соответственно вот эти 2 подхода Есть Для нас

Почему не пользовать сср Постоянно
потому что Это дорого - Дорого по памяти, Дорого по производительности
То есть простые эстетические хтмлки Они гораздо Легче Обслуживаются скажем так
То есть просто высокую производительность с коробки получаем
Вот
Это Про деплой фронтенда

---

Возвращаемся к небу сервера
Про сиай
Про сиай Вставочка да
Сиай он че  делает
Сиай эта штука которая Слушает Изменения репозитория - Что там появились новые комиты Или пулл-реквест создался
и когда Какое то такое событие происходит (событие конфигурируемые)
Вот события конфигурируемые - обычно пуш в Мастер - Для простоты будем его использовать
Так вот
И Когда это событие происходит Сиай Делает какие-то действия
Действия обычно это Сборка И деплой

Сборка что такое
Докер пока не рассматриваю
В случае соответственно питона
Сборка Никакая не нужна
Потому что мы просто пишем там Пайтон ран сервер - что-нибуль такое
Или там пайтон менедж пайрон сервер
Вот
Там нечего собирать
сборка это про компилируемые языки Типа джава сишарпа, про фронтент (Опять же смотри выше)
Вот
Ну предложим собрали мы приложение
И все и дальше мы его деплоим
Деплой это запуск Приложения на удаленной машине Обычно
Соответственно
Сиай Получил Изменения, ну коммиты
И что он делает
он клонирует репозиторий у себя там локально, Собирает это если надо И деплоит
Деплой еще раз что это
Ну например в самой простой ситуации
Это мы подключаемся к удаленной машине Через ссж например
Клонируем там репозиторий ну или делаем гит пулл
И что
И вызываем команду вот тут нашу
Что там Пайтон ран сервер

Теперь Модернизируем этот подход
Обычно Запуск серверов в петоне Однопоточный
Потому что Однопоточный, 1 процессный вот
соответственно нужна штука которая будет Северный наш параллелтть
Иначе Производительность будет Малюсенькая
Вот
и для этого мы че используем
Используем джюникорн например
джюникорн это библиотечка питоновская которая наша веб приложение запускает в несколько Потоков,  несколько процессов
там конфигурируемо это дело
Вот во 1 это используем
во 2 Нам нужно Наше приложение запустить В бэкграунде, в фоновом потоке
Потому что когда мы задеплоили мы задеплоили и все как бы Процесс Завершен
То есть если у нас диплой Последний шаг депоя будет Запустить наш сервер То деплой никогда не прекратится и когда новый комет поступит То что делать отрубать сервер - Ну это не очень
Короче да в бекграунде надо запускать
для этого нужно Запустить в бекграунде да))
Для этого нужно Так называемые процесс менеджер
Например Супервизор так называемый супервизор
собственно для петона есть Так называемый супервизор так и называется Супервизор
Суть какова Мы пишем конфигурационный файлик в Котором Мы указываем команду которую запустить надо и  всякую штуку Типа куда логи писать
все вроде
Короче да
и название да
просто определяем процесс который будет крутится
Дальше этот супервизор запустит нам процесс
вот
то есть деплой такой Простенький, понятный

Потом что мы можем сделать
Потом может Заюзать Докер
Докер  он чем хорош Тем что Мы абстрагируемся от этого всего дела
докер  Уже в себе содержит Сборку Запуск приложения и А Процесс менеджмент
Соответственно
И все это делается в пару команд
То есть суть в чем
Мы создаем файлик - Докер файл
И нем описываем Процессы сборки и Процесс запуска
И все
пишем докер билд Создается Образ
То есть тут аналогия с Виртуальными машинами Типа на самом деле это не виртуальные машины но короче вот
Имоджи есть
Мы создаем этот имидж
Имидж Создаем
И все
и докер ран пишем и запускаем наш Контейнер
Контейнер это Мини виртуалка запущенная С имиджем
Вот
и суть в том что Да
что в принципе все просто в докер файле
Считай что у нас есть голая линукс машинка
И что то должно накатить чтобы запустить наше то приложение - Библиотечке , Ну версия питона
 Для этого пишем фром пайтон И библиотеки пип инстал например
или поэтри
Для поэтри надо поставить поетри
И что
и все
Скопировать код нашего приложения в контейнер
И написать Поетри Ран Что там Пайтон ран сервер
Все
но, Что нужно еще сделать, еще нужно открыть порты
То есть обычно наше приложение запускается Например на 8000 порту И надо открыть его для внешнего мира
вот
в Случае докера Достаточно просто передать 1 опцию
А случае нашей примитивной схемы Нужно нжинкс поднимать
нжинкс - Прокси сервер
то есть он берет трафик извне и передает его дочерним Процессам,  приложениям
вот как то так
Для нжинкса что надо
просто поставить его на линукс машинку
Написать конфик проксирования где будет указано проксирование
и все
А в докере просто 1 опцию указать и все

Но это не единственная опция в докере которую можно указать
Например нам еще полезна может быть опция Рестарт полиси
То есть при Перезапуске машины такая ситуация может быть
Нам нужно наши контейнеры Тоже поднять
И что
Для этого мы передаем аргументы рестарт полиси олвейс например - Всегда будет контейнер запускаться
Вот
И Могут быть еще какие-то аргументы
И чтобы эти аргументы не держать голове не Писать каждый раз есть Абстракция над докера называется докер композ
Докер композе  мы описываем Декларативно как запускать наши Контейнеры и суть в том что можно запускать не 1 контейнер А сразу несколько разных
то есть можно запустить контейнер с Фронтендом, контейнер с бекендом, базу данных Какую нибудь и все это описать
И собственно написать 1 команду - докер композ билд, докер компоуз ап
и все пиздатенько
И там соответственно всякие Облачка Паасы Предлагают Вариант Запускать  Приложение из докер файла И это замечательно
и все на сегодня
В принципе да